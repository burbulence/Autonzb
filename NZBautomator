#!/opt/bin/sh
. /opt/etc/autonzb.conf

####################################################################################################
#Entware-ng Version 0.1 
#############
# This script 'should' download install and configure your folder structure to enable SABnzbd, 
# CouchPotato Sickbeard Headphones and NzbtoMedia scripts. you can set which of them to install via 
# config.cfg by setting each to either 0 or 1.
# It is configured to install the most up to date source code of the programs.
# SickBeard CouchPotato Headphones and NzbtoMedia  download from GitHub therefore it is necessary to install GIT before running this script.
# It has been written to complete a fresh install from scratch on first run of the script or to update the programs
# should one be available.
############################################################################################################
######################################Do not edit the lines below##########################################

###############################
#install packages
###############################
if [ "$packageupdate" ==1 ]; then

opkg update
opkg install python python-pip pyopenssl python-cheetah zlib wget unrar rtmpdump pkg-config openssh-client make libxslt libffi libiconv-full libgpg-error libgcrypt ncurses-bin git gcc bzip2 autoconf automake binutils curl unrar
sed -i 's/packageupdate="1" /packageupdate="0"' /opt/usr/etc/config/config.cfg
fi
###############################
#get current SAB version number
###############################

if [ "$SABnzbd" == 1 ]; then

sabpkg=$(wget http://sabnzbd.org/download/ -O - | grep "Linux" | awk -F'"' '{print $2}' | awk -F'/download' '{print $1}')
sablcl=`echo $sabpkg | sed 's/.*\(SAB.*\.gz\).*/\1/'`
sabtmpdir=`printf "SABnzbd" && echo $sabpkg | sed 's/.*SABnzbd\(.*\)-.*/\1/'`

fi

##########################################################
#create directories and retrieve required restart info
##########################################################

cd "$useradmin"

if [ ! -d "$sabdata" ]; then
            mkdir -p -m 777 "$sabdata"
            mkdir -p -m 777 "$configdir"/sabnzbd
            mkdir -p -m 777 "$useradmin"/download/complete/movie 
            mkdir -p -m 777 "$useradmin"/download/complete/tv
            mkdir -p -m 777 "$useradmin"/download/incomplete
            chmod -R 777 "$useradmin"
            chmod -R 777 "$configdir"
fi

################################
#install SSL Certificates
################################

#if [ ! -f /opt/etc/ssl/certs/cacert.pem ]
#	then
#	wget http://curl.haxx.se/ca/cacert.pem -O /ffp/etc/ssl/certs/cacert.pem
#	git config --system http.sslcainfo /ffp/etc/ssl/certs/cacert.pem
#fi

################################
#install nzbget
################################

if [ "$Nzbget" == 1 ]; then
   opkg install nzbget
fi

################################
#install Sabnzbd
################################

if [ "$SABnzbd" == 1 ]; then

   if [ ! -d "$sabbackup" ]
	then
	mkdir "$sabbackup"
   fi
     
   cd "$sabbackup"

     if [ "$sablcl" != *.gz ]
	then
	rm -f "$sabbackup"/*

     wget "$sabpkg" -O "$sablcl"
            tar xvzf "$sablcl" 
            cp -ru "$sabtmpdir"/* "$sabdata"
	    rm -r "$sabtmpdir"
 
     elif [ ! -f "$sabdata"/SABnzbd.py ]; then
            wget "$sabpkg" -O "$sablcl"
            tar xvzf "$sablcl" 
            cp -ru "$sabtmpdir"/* "$sabdata"
	    rm -r "$sabtmpdir"

     else
            echo "SAB Already up-to-date."
sleep 2     
     fi
fi

#################################
#Install Couchpoato
#################################

if [ "$CouchPotato" == 1 ]; then
   if [ -d "$couchdata" ]; then
	cd "$couchdata"
	git pull https://github.com/RuudBurger/CouchPotatoServer	
	  else
	git clone https://github.com/RuudBurger/CouchPotatoServer "$couchdata"
	mkdir -p -m 777 "$couchconfig"
   sleep 2
   fi
fi
   
#################################
#Install Sickbeard
#################################

if [ "$SickBeard" == 1 ]; then
   if [ -d "$sickdata" ]; then 
      cd "$sickdata"
      git pull  https://github.com/SickRage/SickRage.git
   else
      git clone  https://github.com/SickRage/SickRage.git 
      mkdir -p -m 777 "$sickconfig"
   sleep 2
   fi
fi   

#################################
#Install Headphones
#################################

if [ "$Headphones" == 1 ]; then
   if [ -d "$headdata" ]; then 
      cd "$headdata"
      git pull https://github.com/rembo10/headphones.git
   else
      git clone https://github.com/rembo10/headphones.git "$headdata"
        mkdir -p -m 777 "$headconfig"
   sleep 2
   fi
fi

#################################
#Install Mylar
#################################

if [ "$Mylar" == 1 ]; then
  if [ ! -d "$mylarconfig" ]; then
        mkdir -p -m 777 "$mylarconfig"
  fi
   if [ -d "$mylardata" ]; then 
      cd "$mylardata"
      git pull https://github.com/evilhero/mylar.git
   else
      git clone https://github.com/evilhero/mylar.git "$mylardata"
   sleep 2
   fi
fi

#################################
#Install NzbtoMedia scripts
#################################
if [ "$NzbtoMedia" == 1 ]; then
   if [ -d "$nzbtomedia" ]; then 
	cd "$nzbtomedia"
	git pull https://github.com/clinton-hall/nzbToMedia.git
	else
	git clone https://github.com/clinton-hall/nzbToMedia.git "$nzbtomedia"
   sleep 2
   fi
fi

#################################
#Start all programs
#################################
if [ "$SABnzbd" == 1 ]; then

	if [ -f $SABPID_FILE ]; then
      #grab pid from pid file
      Pid=$(/bin/cat $SABPID_FILE)
      i=0
      kill $Pid
      echo -n " Waiting for $SABPKG_NAME to shut down: "
      while [ -d /proc/$Pid ]; do
         sleep 1
         let i+=1
         /bin/echo -n "$i, "
         if [ $i = 45 ]; then
            echo -n "Tired of waiting, killing $SABPKG_NAME now"
            kill -9 $Pid
            rm -f $SABPID_FILE
            echo "$SABPKG_NAME Shutdown"
         fi
      done
      rm -f $SABPID_FILE
	fi
sleep 2
	 $python "$sabdata"/SABnzbd.py -b 0 -d -f "$sabconfig" PYTHON_EGG_CACHE=/tmp
   else
   echo "SABnzbd not Installed"
fi

if [ "$CouchPotato" == 1 ]; then
   
if [ -f $CPID_FILE ]; then
      #grab pid from pid file
      Pid=$(/bin/cat $CPID_FILE)
      i=0
      kill $Pid
      echo -n " Waiting for $CPKG_NAME to shut down: "
      while [ -d /proc/$Pid ]; do
         sleep 1
         let i+=1
         /bin/echo -n "$i, "
         if [ $i = 45 ]; then
            echo -n "Tired of waiting, killing $CPKG_NAME now"
            kill -9 $Pid
            rm -f $CPID_FILE
            echo "$CPKG_NAME Shutdown"
         fi
      done
      rm -f $CPID_FILE
fi
      
sleep 2

 $python "$couchdata"/CouchPotato.py --daemon --data_dir $CCONFIG_DIR --config $CCONFIG_DIR/settings.conf --pid_file $CPID_FILE
   echo -n "$CPKG_NAME Started"
      else
   echo "Couchpotato not Installed"
   fi

sleep 2

if [ "$SickBeard" == 1 ]; then

if [ -f $SPID_FILE ]; then
      #grab pid from pid file
      Pid=$(/bin/cat $SPID_FILE)
      i=0
      kill $Pid
      echo -n " Waiting for $SPKG_NAME to shut down: "
      while [ -d /proc/$Pid ]; do
         sleep 1
         let i+=1
         /bin/echo -n "$i, "
         if [ $i = 45 ]; then
            echo -n "Tired of waiting, killing $SPKG_NAME now"
            kill -9 $Pid
            rm -f $SPID_FILE
            echo "$SPKG_NAME Shutdown"
         fi
      done
      rm -f $SPID_FILE
fi
      
sleep 2


   $python "$sickdata"/SickBeard.py --datadir "$sickconfig" --config "$sickconfig"/config.ini -d --pidfile $SPID_FILE
echo -n "$SPKG_NAME Started"   
      else
   echo "SickRage not Installed"
   fi

sleep 2

if [ "$Headphones" == 1 ]; then

if [ -f $HPID_FILE ]; then
      #grab pid from pid file
      Pid=$(/bin/cat $HPID_FILE)
      i=0
      kill $Pid
      echo -n " Waiting for $HPKG_NAME to shut down: "
      while [ -d /proc/$Pid ]; do
         sleep 1
         let i+=1
         /bin/echo -n "$i, "
         if [ $i = 45 ]; then
            echo -n "Tired of waiting, killing $HPKG_NAME now"
            kill -9 $Pid
            rm -f $HPID_FILE
            echo "$HPKG_NAME Shutdown"
         fi
      done
      rm -f $HPID_FILE
fi
sleep 2
$python "$headdata"/Headphones.py --datadir "$headconfig" --config "$headconfig"/config.ini  -d
   echo -n "$HPKG_NAME Started"
      else
   echo "Headphones not Installed"
fi

sleep 2

if [ "$Mylar" == 1 ]; then

if [ -f $MPID_FILE ]; then
      #grab pid from pid file
      Pid=$(/bin/cat $MPID_FILE)
      i=0
      kill $Pid
      echo -n " Waiting for $MPKG_NAME to shut down: "
      while [ -d /proc/$Pid ]; do
         sleep 1
         let i+=1
         /bin/echo -n "$i, "
         if [ $i = 45 ]; then
            echo -n "Tired of waiting, killing $MPKG_NAME now"
            kill -9 $Pid
            rm -f $MPID_FILE
            echo "$MPKG_NAME Shutdown"
         fi
      done
      rm -f $MPID_FILE

fi
sleep 2

   $python "$mylardata"/Mylar.py --datadir "$mylarconfig" --config "$mylarconfig"/config.ini  -d --pidfile $SPID_FILE
   echo -n "$MPKG_NAME Started"
      else
   echo "Mylar not Installed"
fi
